This is for copy/pasting database commands for different requests from the server.

[Title]

[Description of function]

[Command]
__________________________________

Create user
Takes in a username, email, and password. The webpage handles password requirements such as length. If the username or email
has already been taken, the database will return an error that the server will need to handle, and tell the client
that the user needs to enter different information. Valid input is added to the 'user' and 'password' tables.

BEGIN;
INSERT INTO user (Username, Email, DateJoined) VALUES('nameEntry', 'emailEntry', NOW());
INSERT INTO passwords (UIDno, encrypted) VALUES(LAST_INSERT_ID(), 'passwordEntry');
COMMIT;
__________________________________

Verify login
User enters a username and password. The server looks in the database to see if the password is correct. It must look at
the User table to retrieve the user's ID, then get the password to present to the server so it can compare.\

SELECT encrypted FROM passwords as p, user as u WHERE u.Username LIKE 'nameEntry' AND p.UIDno = u.UID;
__________________________________

Create team
Client will submit the username and team name (we will handle images in later sprint). Gets the UID and adds info to
the table. Returns an error if there is a duplicate team name.

INSERT INTO team (Name, OwnerID) VALUES('tmNameEntry', (SELECT UID FROM user WHERE Username LIKE 'usersName'));
__________________________________

Create League
Works the same as creating a team.

INSERT INTO league (NAME, LgOwnerID) VALUES('lgNameEntry', (SELECT UID FROM user WHERE Username LIKE 'usersName'));
__________________________________

Create Tournament
Client submits username. User must enter the tournament name and parent league and may enter a format and
start and/or end dates. Error occurs with duplicate set of name, league, format, and dates. 

INSERT INTO tournament (TrnName, leagueID, TrnStart, TrnEnd, FormatID) VALUES('TrnNameEntry', (SELECT LID FROM league WHERE NAME LIKE 'lgNameEntry'), 'stDateEntry', 'endDateEntry', (SELECT FID FROM format WHERE FName LIKE 'formNameEntry'));

Minimum entry:
INSERT INTO tournament (TrnName, leagueID) VALUES('TrnNameEntry', (SELECT LID FROM league WHERE NAME LIKE 'lgNameEntry'));
__________________________________
